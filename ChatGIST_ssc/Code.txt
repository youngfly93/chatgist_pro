# 加载必要包
library(Seurat)
library(ggplot2)
library(patchwork)
library(stringr)
library(ggsci)

defined_color <- c(pal_npg("nrc", alpha = 1)(9),
                   pal_lancet("lanonc", alpha = 1)(9)[c(3,5,10)])


# Function 1: VlnPlot
# 纯ggplot2实现

ID2 <- "MCM7"

gene_df <- FetchData(In_house_ssc, vars = c(ID2, "celltype"))
colnames(gene_df)[1] <- 'Expr'

ggplot(gene_df, aes(x = celltype, y = Expr, fill = celltype)) +
  geom_violin(scale = "width", trim = TRUE) +
  geom_boxplot(width = 0.1, outlier.shape = NA) + 
  scale_fill_manual(values = defined_color) + 
  theme_bw()+
  ylab(ID2)+
  theme(legend.position = 'none',
        panel.background = element_rect(fill = "#F3F6F6"),
        panel.border = element_rect(linewidth = 1.2),
        panel.grid.major = element_line(colour = "#DEE2E4",
                                        linewidth = 0.5,
                                        linetype = "dashed"),
        plot.title = element_text(hjust = 0.5,
                                  size = 14,
                                  colour = "darkred",
                                  face = "bold"),
        axis.title.y = element_text(size=12,
                                    colour = "darkred",
                                    face = "bold"),
        axis.text.x =element_text(size=10,
                                  angle = 45,
                                  hjust = 1,
                                  #  colour = "black",
                                  face = "bold"),
        axis.text.y = element_text(size=10,
                                   #  colour = "black",
                                   face = "bold"),
        axis.title.x = element_blank()) 

# Function 2: Dimplot
# 纯ggplot2实现（需提前提取数据）
library(ggplot2)
library(ggsci)

emb_table <- In_house_ssc@reductions[["umap"]]@cell.embeddings

plot_data <- data.frame(emb_table,
                        Cluster = In_house_ssc$celltype)

colnames(plot_data) <- c("UMAP_1", "UMAP_2", "Cluster")  # 重命名列

# cell type 
ggplot(plot_data,
       aes(x = UMAP_1,
           y = UMAP_2,
           color = Cluster)) +
  geom_point(size = 0.5) +
  theme_bw()+ 
  guides(color = guide_legend(override.aes = list(size = 3)))+
  scale_color_manual(values = defined_color) + 
  theme(#legend.position = 'none',
    panel.background = element_rect(fill = "#F3F6F6"),
    panel.border = element_rect(linewidth = 1.2),
    panel.grid.major = element_line(colour = "#DEE2E4",
                                    linewidth = 0.5,
                                    linetype = "dashed"),
    plot.title = element_text(hjust = 0.5,
                              size = 14,
                              colour = "darkred",
                              face = "bold"),
    axis.title.y = element_text(size=12,
                                colour = "darkred",
                                face = "bold"),
    axis.text.x =element_text(size=10,
                              #  colour = "black",
                              face = "bold"),
    axis.text.y = element_text(size=10,
                               #  colour = "black",
                               face = "bold"),
    axis.title.x = element_text(size=12,
                                colour = "darkred",
                                face = "bold")) 


ID2 <- "MCM7"

gene_df <- FetchData(In_house_ssc, vars = c(ID2, "celltype"))
colnames(gene_df)[1] <- 'Expr'

plot_data <- data.frame(emb_table,
                        Expr = gene_df$Expr)

colnames(plot_data) <- c("UMAP_1", "UMAP_2", "Values")  # 重命名列

ggplot(plot_data, aes(UMAP_1, UMAP_2, color = Values)) +
  geom_point(size = 0.5) +
  scale_color_gradient(
    low = "grey80",       # 浅灰色起点
    high = "darkred",     # 深红色终点
    na.value = "grey90"   # 缺失值颜色
  ) + 
  theme_bw()+
  theme(#legend.position = 'none',
    panel.background = element_rect(fill = "#F3F6F6"),
    panel.border = element_rect(linewidth = 1.2),
    panel.grid.major = element_line(colour = "#DEE2E4",
                                    linewidth = 0.5,
                                    linetype = "dashed"),
    plot.title = element_text(hjust = 0.5,
                              size = 14,
                              colour = "darkred",
                              face = "bold"),
    axis.title.y = element_text(size=12,
                                colour = "darkred",
                                face = "bold"),
    axis.text.x =element_text(size=10,
                              #  colour = "black",
                              face = "bold"),
    axis.text.y = element_text(size=10,
                               #  colour = "black",
                               face = "bold"),
    axis.title.x = element_text(size=12,
                                colour = "darkred",
                                face = "bold")) 
